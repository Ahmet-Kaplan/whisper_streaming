name: audit.yml
on:
  pull_request:
  workflow_dispatch:

jobs:
  linting:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.9", "3.10", "3.11", "3.12", "3.13" ]
    steps:
      - uses: actions/checkout@v4.2.2

      - uses: actions/setup-python@v5.6.0
        with:
          python-version: ${{ matrix.python-version }}
          check-latest: "true"
          cache: "pip"

      - uses: awalsh128/cache-apt-pkgs-action@v1.4.3
        with:
          packages: libasound2-dev
          version: 1.0

      - uses: awalsh128/cache-apt-pkgs-action@v1.4.3
        if: matrix.python-version == '3.13' # opus-fast-mosestokenizer does not have python 3.13 builds
        with:
          packages: libboost-program-options-dev libboost-thread-dev
          version: 1.0

      - name: Cache pip dependencies
        uses: actions/cache@v4.2.3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip
          restore-keys: |
            ${{ runner.os }}-pip

      - name: Dependency Installation
        run: |
          set -e
          python3 -m venv .venv
          source .venv/bin/activate
          python3 -m pip install --upgrade pip
          python3 -m pip install .[all]
          python3 -m pip install -r requirements/dev/requirements.txt

      - uses: astral-sh/ruff-action@v3.4.0
        with:
          version-file: "requirements/dev/requirements.txt"
          src: "./src"

  audit:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.9", "3.10", "3.11", "3.12", "3.13" ]
    steps:
      - uses: actions/checkout@v4.2.2

      - uses: actions/setup-python@v5.6.0
        with:
          python-version: ${{ matrix.python-version }}
          check-latest: "true"
          cache: "pip"

      - uses: pypa/gh-action-pip-audit@v1.1.0
        with:
          inputs: "requirements/dev/requirements.txt requirements/docs/requirements.txt requirements/library/requirements.txt requirements/library/requirements_faster_whisper.txt"
